"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7147],{1822:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"quickstart","title":"Quickstart Guide","description":"sphereneGRASSHOPPER Documentation Homepage","source":"@site/../obsidian-spherene-documentation-grasshopper/sphereneGRASSHOPPER Quickstart Guide.md","sourceDirName":".","slug":"/quickstart","permalink":"/sphereneGRASSHOPPER/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"quickstart","title":"Quickstart Guide","lang":"en","description":"sphereneGRASSHOPPER Documentation Homepage","keywords":["quickstart","installation","uninstallation","UI","examples"]},"sidebar":"tutorialSidebar","previous":{"title":"spherene for Grasshopper","permalink":"/sphereneGRASSHOPPER/"},"next":{"title":"Nomenclature","permalink":"/sphereneGRASSHOPPER/Nomenclature/"}}');var t=s(2540),r=s(3023),o=s(6243);s(7251);const l={sidebar_position:2,id:"quickstart",title:"Quickstart Guide",lang:"en",description:"sphereneGRASSHOPPER Documentation Homepage",keywords:["quickstart","installation","uninstallation","UI","examples"]},a=void 0,c={},d=[{value:"Installation &amp; Uninstallation",id:"installation--uninstallation",level:2},{value:"Overview of Spherene in Grasshopper",id:"overview-of-spherene-in-grasshopper",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic computation",id:"basic-computation",level:2},{value:"Field computation",id:"field-computation",level:2},{value:"Constant field",id:"constant-field",level:3},{value:"Field grading",id:"field-grading",level:3},{value:"dfenv computation",id:"dfenv-computation",level:2},{value:"Modifier computation",id:"modifier-computation",level:2},{value:"Boundary modifier",id:"boundary-modifier",level:3},{value:"Detail modifier",id:"detail-modifier",level:3},{value:"Cavity modifier",id:"cavity-modifier",level:3}];function h(e){const n={a:"a",admonition:"admonition",annotation:"annotation",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",mtext:"mtext",p:"p",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Last Change: 2025-08-27 #dba #jta"}),"\n",(0,t.jsxs)(n.p,{children:["Spherene is a ",(0,t.jsx)(n.strong,{children:"cloud-based"})," Grasshopper Add-In service that requires registration. When you activate Spherene computation for the first time, a request window will appear prompting you to enter your API key."]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_APIkey.jpg",alt:"UI for requesting API key",width:220,align:"center"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"installation--uninstallation",children:"Installation & Uninstallation"}),"\n",(0,t.jsxs)(n.p,{children:["You can search for ",(0,t.jsx)(n.strong,{children:"Spherene"})," in the Rhino ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Package Manager"})})," to install or uninstall the add-in:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_install.jpg",alt:"Install or uninstall",width:480,align:"center"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"overview-of-spherene-in-grasshopper",children:"Overview of Spherene in Grasshopper"}),"\n",(0,t.jsxs)(n.p,{children:["The component tools of Spherene in Grasshopper are organized into two sections: ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Project"})})," and ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Modifier"})}),":"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_overview.jpg",alt:"Overview of Spherene tools in Grasshopper",width:220,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Project"})})," section includes the minimal required components to start a Spherene computation:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/project.png",alt:"project button",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Project"})}),": Provides metadata for the Spherene project"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/single.png",alt:"singleSurface",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Single"})}),": Selects the envelope and other inputs for computing a single Spherene surface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/solid.png",alt:"solid",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Solid"})}),": Sets input parameters for computing a solid Spherene surface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/field.png",alt:"field",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Field"})}),": Generates a point map for ",(0,t.jsx)(n.code,{children:"field"})," attributes such as ",(0,t.jsx)(n.code,{children:"Density Field"}),", ",(0,t.jsx)(n.code,{children:"Surface Bias Field"}),", and ",(0,t.jsx)(n.code,{children:"Thickness Field"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/compute.png",alt:"compute",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Compute"})}),": Controls the output of the Spherene computation"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["An example of a basic Spherene computation is provided in ",(0,t.jsx)(n.a,{href:"#basic-computation",children:"Basic computation"}),", illustrating the workflow of components in the ",(0,t.jsx)(n.code,{children:"Project"})," section. Detailed descriptions of each component are available in the ",(0,t.jsx)(n.strong,{children:"Help"})," window, which you can access by right-clicking on the black header area of the desired component block:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_help.jpg",alt:"Calling out the help window",width:640,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["In the Help window, you\u2019ll find the type and description of each input attribute. All attributes marked with a ",(0,t.jsx)(n.code,{children:"*required*"})," tag are mandatory."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Modifier"})," section includes components that allow advanced modifications to the Spherene structure (see details in ",(0,t.jsx)(n.a,{href:"#modifier-computation",children:"Modifier computation"}),"):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/boundary.png",alt:"boundary Icon",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Boundary"})}),": Modifies the ",(0,t.jsx)(n.code,{children:"Boundaries"})," of the generated Spherene structure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/detail.png",alt:"detail Icon",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Detail"})}),": Defines a closed body as a ",(0,t.jsx)(n.code,{children:"Detail"})," to either add to or subtract from the Spherene geometry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/cavity.png",alt:"cavity Icon",width:32,align:"inline"})," ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Cavity"})}),": Introduces a ",(0,t.jsx)(n.code,{children:"Cavity"})," into the Spherene geometry"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:"The Spherene Add-in generates Adaptive Density Minimal Surfaces (ADMS), also known as Spherene geometry, based on a given envelope. By adjusting various attributes and modifiers, you have the flexibility to tailor the Spherene structure to your specific design needs."}),"\n",(0,t.jsx)(n.p,{children:"There are five main Spherene attributes and modifiers:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Field"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/field.png",alt:"field Icon",width:32,align:"inline"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Density Field Envelope (",(0,t.jsx)(n.code,{children:"Dfenv mesh"}),")"]})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/single.png",alt:"singleSurface Icon",width:32,align:"inline"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Boundary"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/boundary.png",alt:"boundary Icon",width:32,align:"inline"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Detail"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/detail.png",alt:"detail Icon",width:32,align:"inline"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cavity"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/cavity.png",alt:"cavity Icon",width:32,align:"inline"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In this section, we use a simple example with a cone-shaped envelope to demonstrate how to work with different ",(0,t.jsx)(n.strong,{children:"Spherene attributes"})," and ",(0,t.jsx)(n.strong,{children:"modifiers"}),". The example Grasshopper file can be ",(0,t.jsx)(n.a,{href:"https://sphereneag.sharepoint.com/:f:/s/PublicSharing/EhI-1j0lWVhBmiSiHyAQscsBYAICPXPos4ueFTejqL6Uig?e=r0eWlA",children:"downloaded here"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["We begin with an overview of the general workflow for Spherene computation (see ",(0,t.jsx)(n.a,{href:"#basic-computation",children:"Basic computation"}),"). Next, in ",(0,t.jsx)(n.a,{href:"#field-computation",children:"Field computation"})," and ",(0,t.jsx)(n.a,{href:"#dfenv-computation",children:"dfenv computation"}),", we show how the ",(0,t.jsx)(n.code,{children:"Field"})," and ",(0,t.jsx)(n.code,{children:"Dfenv mesh"})," attributes influence the structure, respectively. Finally, we present examples using the ",(0,t.jsx)(n.code,{children:"Boundary"}),", ",(0,t.jsx)(n.code,{children:"Detail"}),", and ",(0,t.jsx)(n.code,{children:"Cavity"})," modifiers in ",(0,t.jsx)(n.a,{href:"#modifier-computation",children:"Modifier computation"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"basic-computation",children:"Basic computation"}),"\n",(0,t.jsxs)(n.p,{children:["In this example, we compute both a single surface and a solid surface of a Spherene structure using a cone-shaped envelope to demonstrate the general workflow of Spherene computation.",(0,t.jsx)(n.br,{}),"\n","The Grasshopper canvas for this setup is shown below:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_workflow.jpg",alt:"Canvas of general Spherene workflow",width:640,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Compute"})})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/compute.png",alt:"compute",width:32,align:"inline"})," component accepts four possible inputs:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Outputs"})}),": A ",(0,t.jsx)(n.code,{children:"text"})," input defining the output type for the computation (",(0,t.jsx)(n.code,{children:"0 = Single"}),", ",(0,t.jsx)(n.code,{children:"1 = Solid"}),", ",(0,t.jsx)(n.code,{children:"2 = Labyrinths"}),", ",(0,t.jsx)(n.code,{children:"3 = Halfspaces"}),"). For example, we can assign ",(0,t.jsx)(n.code,{children:'"01"'})," to compute both the single surface and the solid surface."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Trigger"})}),": Accepts a ",(0,t.jsx)(n.strong,{children:"Boolean Toggle"})," input for automating the computation pipeline.",(0,t.jsx)(n.br,{}),"\n","Switching the toggle from ",(0,t.jsx)(n.code,{children:"False"})," to ",(0,t.jsx)(n.code,{children:"True"})," is equivalent to clicking the ",(0,t.jsx)(n.strong,{children:"Compute"})," button manually."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Project"})}),": Provided by ",(0,t.jsx)(n.code,{children:"sphe_Project"}),", containing metadata for the current project."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Single"})}),": Provided by ",(0,t.jsx)(n.code,{children:"sphe_Single"}),", specifying settings for single surface computation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Solid"})}),": Provided by ",(0,t.jsx)(n.code,{children:"sphe_Solid"}),", specifying settings for solid surface computation.",(0,t.jsx)(n.br,{}),"\n","This input can be left empty if only a single surface is requested in the ",(0,t.jsx)(n.code,{children:"Outputs"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["We recommend attaching a ",(0,t.jsx)(n.strong,{children:"Panel"})," to the ",(0,t.jsx)(n.code,{children:"message"})," output of the ",(0,t.jsx)(n.code,{children:"sphe_Compute"})," component to monitor computation progress and view any error messages."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Project"})})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/project.png",alt:"project button",width:32,align:"inline"})," component defines five metadata inputs for the Spherene project:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Density Reference Thickness (DRT)"})}),": Specifies the reference wall thickness for the generated Spherene geometry when no ",(0,t.jsx)(n.code,{children:"Thickness Field"})," is provided\u2014i.e., for constant wall thickness. Lower DRT values result in more complex geometries with higher genus (i.e., more holes or handles) but also increase the computational cost. Halving the DRT can increase computation time by up to ",(0,t.jsx)(n.strong,{children:"8\xd7"})," and memory usage by up to ",(0,t.jsx)(n.strong,{children:"6\xd7"}),". The unit of DRT matches the length unit set in your Rhino/Grasshopper model. We recommend using a float value greater than ",(0,t.jsx)(n.strong,{children:"0.1"}),", for example, 0.4 as a starting value. This input is ",(0,t.jsx)(n.strong,{children:"mandatory"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Random Seed"})}),": Sets the random seed for the computation. Must be an integer between ",(0,t.jsx)(n.strong,{children:"1"})," and ",(0,t.jsx)(n.strong,{children:"999,999,999"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Max Time"})}),": Defines the maximum allowed runtime (minute) before the computation is automatically terminated."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Naming"})}),": Specifies the ",(0,t.jsx)(n.strong,{children:"parent layer name"})," for baking."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"PartName"})}),": Specifies the ",(0,t.jsx)(n.strong,{children:"sub-layer name"})," for baking."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Single"})})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/single.png",alt:"singleSurface",width:32,align:"inline"})," component is used to select the envelope and other input parameters for computing a ",(0,t.jsx)(n.strong,{children:"single"})," Spherene surface:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"env Mesh"})}),": Specifies the envelope mesh for the desired part. This input is ",(0,t.jsx)(n.strong,{children:"mandatory"}),", and only one envelope is allowed. It is also possible to use several disjoint, closed meshes merged into one."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Dfenv Mesh"})})," ",(0,t.jsx)(n.em,{children:"(Density Field Envelope)"}),": Defines the envelope used for computing the Spherene geometry (see details in ",(0,t.jsx)(n.a,{href:"#dfenv-computation",children:"dfenv computation"}),"). By default, this is the same as ",(0,t.jsx)(n.code,{children:"env Mesh"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Density Field"})}),": Defines the percentage ratio between the Spherene volume and the envelope volume: ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mtext,{children:"Density"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsxs)(n.mfrac,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mtext,{children:"Area\xa0of\xa0Spherene"}),(0,t.jsx)(n.mo,{children:"\xd7"}),(0,t.jsx)(n.mtext,{children:"Thickness"})]}),(0,t.jsx)(n.mtext,{children:"Envelope\xa0Volume"})]}),(0,t.jsx)(n.mo,{children:"\xd7"}),(0,t.jsx)(n.mn,{children:"100"}),(0,t.jsx)(n.mi,{mathvariant:"normal",children:"%"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"\\text{Density} = \\frac{\\text{Area of Spherene} \\times \\text{Thickness}}{\\text{Envelope Volume}} \\times 100 \\%"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(n.span,{className:"mord text",children:(0,t.jsx)(n.span,{className:"mord",children:"Density"})}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1.4133em",verticalAlign:"-0.4811em"}}),(0,t.jsxs)(n.span,{className:"mord",children:[(0,t.jsx)(n.span,{className:"mopen nulldelimiter"}),(0,t.jsx)(n.span,{className:"mfrac",children:(0,t.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(n.span,{className:"vlist-r",children:[(0,t.jsxs)(n.span,{className:"vlist",style:{height:"0.9322em"},children:[(0,t.jsxs)(n.span,{style:{top:"-2.655em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:(0,t.jsx)(n.span,{className:"mord text mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"Envelope\xa0Volume"})})})})]}),(0,t.jsxs)(n.span,{style:{top:"-3.23em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsx)(n.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,t.jsxs)(n.span,{style:{top:"-3.4461em"},children:[(0,t.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,t.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsxs)(n.span,{className:"mord mtight",children:[(0,t.jsx)(n.span,{className:"mord text mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"Area\xa0of\xa0Spherene"})}),(0,t.jsx)(n.span,{className:"mbin mtight",children:"\xd7"}),(0,t.jsx)(n.span,{className:"mord text mtight",children:(0,t.jsx)(n.span,{className:"mord mtight",children:"Thickness"})})]})})]})]}),(0,t.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(n.span,{className:"vlist-r",children:(0,t.jsx)(n.span,{className:"vlist",style:{height:"0.4811em"},children:(0,t.jsx)(n.span,{})})})]})}),(0,t.jsx)(n.span,{className:"mclose nulldelimiter"})]}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"\xd7"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.8056em",verticalAlign:"-0.0556em"}}),(0,t.jsx)(n.span,{className:"mord",children:"100%"})]})]})]}),". This input is ",(0,t.jsx)(n.strong,{children:"mandatory"})," and should come from a ",(0,t.jsx)(n.code,{children:"sphe_Field"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/field.png",alt:"field",width:32,align:"inline"})," component. The ",(0,t.jsx)(n.code,{children:"density"})," value should be in the range of ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mo,{stretchy:"false",children:"["}),(0,t.jsx)(n.mn,{children:"0"}),(0,t.jsx)(n.mo,{separator:"true",children:","}),(0,t.jsx)(n.mn,{children:"100"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"]"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"[0,100]"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mopen",children:"["}),(0,t.jsx)(n.span,{className:"mord",children:"0"}),(0,t.jsx)(n.span,{className:"mpunct",children:","}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(n.span,{className:"mord",children:"100"}),(0,t.jsx)(n.span,{className:"mclose",children:"]"})]})})]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Surface Bias Field"})}),": Controls how the minimal surface shifts from its neutral position (",(0,t.jsx)(n.code,{children:"Surface Bias = 0"}),") along the normal direction. A value of ",(0,t.jsx)(n.code,{children:"-1"})," shifts the surface fully in the negative direction; ",(0,t.jsx)(n.code,{children:"1"})," shifts it fully in the positive direction. This input is optional (default = ",(0,t.jsx)(n.strong,{children:"0"}),") and should also come from ",(0,t.jsx)(n.code,{children:"sphe_Field"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/field.png",alt:"field",width:32,align:"inline"}),". Surface bias affects the surface morphology of the Spherene structure (see ",(0,t.jsx)(n.a,{href:"#constant-field",children:"Constant field"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Cavity"})}),": Introduces a cavity into the Spherene geometry\u2014useful for integrating inlets, outlets, or other functional features. Should come from a ",(0,t.jsx)(n.code,{children:"sphe_Cavity"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/cavity.png",alt:"cavity Icon",width:32,align:"inline"})," component."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Mesh Reduction"})}),": Reduces the polygon count of the output mesh, which can speed up slicing and improve performance in additive manufacturing workflows. Default value is ",(0,t.jsx)(n.strong,{children:"0%"})," (no reduction)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Colorize"})}),": Colorize the output mesh based on selected quantities."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Solid"})})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/solid.png",alt:"solid",width:32,align:"inline"})," component sets input parameters for computing a ",(0,t.jsx)(n.strong,{children:"solid"})," Spherene surface:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Thickness Field"})}),": Specifies the wall thickness of the generated Spherene geometry. This input should be connected to the output of a ",(0,t.jsx)(n.code,{children:"sphe_Field"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/field.png",alt:"field",width:32,align:"inline"})," component. If not defined, it defaults to the value specified in the ",(0,t.jsx)(n.code,{children:"Density Reference Thickness"})," (DRT) from ",(0,t.jsx)(n.code,{children:"sphe_Project"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/project.png",alt:"project button",width:32,align:"inline"}),". The unit matches the length unit set in your Rhino/Grasshopper model. The ",(0,t.jsx)(n.code,{children:"thickness"})," value should be in the range of ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mo,{stretchy:"false",children:"["}),(0,t.jsx)(n.mn,{children:"0.001"}),(0,t.jsx)(n.mo,{separator:"true",children:","}),(0,t.jsx)(n.mi,{children:"i"}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mi,{children:"f"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"[0.001,inf)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mopen",children:"["}),(0,t.jsx)(n.span,{className:"mord",children:"0.001"}),(0,t.jsx)(n.span,{className:"mpunct",children:","}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"in"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Boundary"})}),": Specifies the boundary conditions to be applied. Should be connected to the output of a ",(0,t.jsx)(n.code,{children:"sphe_Boundary"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/boundary.png",alt:"boundary Icon",width:32,align:"inline"})," component."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Detail"})}),": Defines a closed mesh or body to be either ",(0,t.jsx)(n.strong,{children:"added to"})," or ",(0,t.jsx)(n.strong,{children:"subtracted from"})," the Spherene geometry. Connect the output from a ",(0,t.jsx)(n.code,{children:"sphe_Detail"})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/detail.png",alt:"detail Icon",width:32,align:"inline"})," component."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Mesh Reduction"})}),": Reduces the polygon count of the final mesh, which can help speed up slicing for additive manufacturing. Default value is ",(0,t.jsx)(n.strong,{children:"0%"})," (no reduction)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Color Scheme"})}),": Selects the scheme for color mapping in the visualization."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Z Factor"})}),": Scales the top overhangs of the Spherene geometry slightly to produce thicker top surfaces. This is especially helpful for FFF slicers to generate more solid top layers."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Field"})})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/field.png",alt:"field",width:32,align:"inline"})," component is used to generate a ",(0,t.jsx)(n.strong,{children:"point map"})," for various ",(0,t.jsx)(n.code,{children:"field"})," attributes, including ",(0,t.jsx)(n.code,{children:"Density Field"}),", ",(0,t.jsx)(n.code,{children:"Surface Bias Field"}),", and ",(0,t.jsx)(n.code,{children:"Thickness Field"}),". For examples and usage of different ",(0,t.jsx)(n.code,{children:"field"})," types, refer to the section ",(0,t.jsx)(n.a,{href:"#field-computation",children:"Field computation"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Once all settings are configured, start the computation by clicking the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"compute"})})," button on the",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Compute"})})," ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/compute.png",alt:"compute",width:32,align:"inline"})," component. After the computation completes, you can ",(0,t.jsx)(n.strong,{children:"visualize the result in Rhino"})," by clicking the ",(0,t.jsx)(n.strong,{children:"bake"})," button on the same component."]}),"\n",(0,t.jsx)(n.h2,{id:"field-computation",children:"Field computation"}),"\n",(0,t.jsxs)(n.p,{children:["For each ",(0,t.jsx)(n.code,{children:"field"})," type:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If not explicitly set, the default value will be used."}),"\n",(0,t.jsxs)(n.li,{children:["If only one value is provided, the ",(0,t.jsx)(n.code,{children:"field"})," is treated as constant across the entire envelope (example see ",(0,t.jsx)(n.a,{href:"#constant-field",children:"Constant field"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["If multiple values are assigned, a spatial ",(0,t.jsx)(n.code,{children:"field"})," distribution will be generated over the envelope. For example, assigning two ",(0,t.jsx)(n.code,{children:"field"})," values to two distinct points creates a gradient between them. You can even assign ",(0,t.jsx)(n.code,{children:"field"})," values to various geometries to produce more complex field distributions, enabling more advanced and customized designs (example see ",(0,t.jsx)(n.a,{href:"#field-grading",children:"Field grading"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"constant-field",children:"Constant field"}),"\n",(0,t.jsxs)(n.p,{children:["The following example canvas assigns a ",(0,t.jsx)(n.code,{children:"Surface bias field"})," at a single point, which configures a constant ",(0,t.jsx)(n.code,{children:"Surface bias field"})," across the envelope:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_canvasconfield.jpg",alt:"Canvas of constant field example",width:640,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["The following figure shows Spherene geometries generated with various constant ",(0,t.jsx)(n.code,{children:"Surface Bias"}),":"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/xmpl_conSB.jpg",alt:"Generated Spherene with various constant surface bias",width:640,align:"center"}),"\n",(0,t.jsx)(n.h3,{id:"field-grading",children:"Field grading"}),"\n",(0,t.jsxs)(n.p,{children:["When assigning different ",(0,t.jsx)(n.code,{children:"field"})," values to multiple vertices, surfaces, bodies, or meshes, a spatial distribution/grading of the ",(0,t.jsx)(n.code,{children:"field"})," will be generated based on the specified values. In this example, we assign two ",(0,t.jsx)(n.code,{children:"density field"})," values at two points and give two curved surfaces different ",(0,t.jsx)(n.code,{children:"Thickness field"})," values:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_varyfield.jpg",alt:"Assign two point density fields and two surface thickness field",width:320,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"The example canvas of such setup in Grasshopper is as following:"}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_canvasvaryfield.jpg",alt:"Canvas of field grading example",width:640,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"The resulting Spherene geometry will exhibit a spatially varying thickness and density."}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/xmpl_varythickness.jpg",alt:"Generated Spherene geometry with spatially varying thickness and density fields",width:320,align:"center"}),"\n",(0,t.jsx)(n.h2,{id:"dfenv-computation",children:"dfenv computation"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"dfenv"})," attribute takes a mesh/body as the density field envelope. The default ",(0,t.jsx)(n.code,{children:"dfenv"})," is set to be the same as the computed envelope ",(0,t.jsx)(n.code,{children:"env"}),". However, when a ",(0,t.jsx)(n.code,{children:"dfenv"})," is defined, the Spherene geometry is first generated using ",(0,t.jsx)(n.code,{children:"dfenv"})," as the envelope, then Boolean trimmed by the original envelope ",(0,t.jsx)(n.code,{children:"env"})," to produce the final geometry. This enables the generation of Spherene structures ",(0,t.jsx)(n.strong,{children:"at sharp edges or in thin regions"})," where material might otherwise be insufficient, or it can be used to ",(0,t.jsx)(n.strong,{children:"intentionally avoid generating Spherene geometry in specific areas"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"In the following example, we aim to generate Spherene structures at the sharp tip and edges of a cone:"}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/xmpl_dfenv.jpg",alt:"Generated Spherene geometries without and with dfenv",width:480,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["To achieve this, we assign a box mesh that is larger than the computed cone envelope ",(0,t.jsx)(n.code,{children:"env"})," as the density field envelope ",(0,t.jsx)(n.code,{children:"dfenv"}),":"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_dfenv.jpg",alt:"Setup of dfenv",width:320,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"The canvas of this setup is shown as following:"}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_canvasdfenv.jpg",alt:"Canvas of dfenv example",width:640,align:"center"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["In rare cases, computations may fail due to mesh Boolean issues (e.g., when ",(0,t.jsx)(n.code,{children:"dfenv"})," is involved), even though our Boolean algorithm is among the most robust available. These issues can typically be resolved by adjusting the density value or slightly moving or enlarging the ",(0,t.jsx)(n.code,{children:"dfenv"}),". If the problem persists, we encourage you to contact us directly, and we will assist you with your specific case."]})}),"\n",(0,t.jsx)(n.h2,{id:"modifier-computation",children:"Modifier computation"}),"\n",(0,t.jsx)(n.h3,{id:"boundary-modifier",children:"Boundary modifier"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Boundary"})," modifier ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/boundary.png",alt:"boundary Icon",width:32,align:"inline"})," allows you to modify the boundaries of the generated Spherene structure. The general logic behind boundary generation is to grow the Spherene structure near the boundary into the boundary surface with a given parameter set, including ",(0,t.jsx)(n.code,{children:"Hull thickness"}),", ",(0,t.jsx)(n.code,{children:"Target thickness"}),", ",(0,t.jsx)(n.code,{children:"Blend distance"}),", and ",(0,t.jsx)(n.code,{children:"Blend exponent"}),". These parameters control how the geometry blends into the defined boundary region. A schematic of boundary generation is as following:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/doc_boundaries.png",alt:"Schematic of boundary generation",width:320,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Boundary"})})," modifier ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/boundary.png",alt:"boundary Icon",width:32,align:"inline"})," is used to define and control the boundaries of the generated Spherene structure. It allows fine-tuning of surface morphology and blending behavior along selected mesh or surface regions."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Mesh"})}),": Specifies the mesh or surface to be treated as a boundary."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Front/Back"})}),": ",(0,t.jsx)(n.strong,{children:"text"})," that determines which space(s)/labyrinth(s) of the Spherene structure the boundary modification will be applied to. ",(0,t.jsx)(n.code,{children:'"1"'})," turns on the Front boundary, ",(0,t.jsx)(n.code,{children:'"0"'})," turns on the Back boundary. For example, entering ",(0,t.jsx)(n.code,{children:'"01"'})," applies the boundary to ",(0,t.jsx)(n.strong,{children:"both"})," Front and Back labyrinth spaces. The example below illustrates the effect of this setting."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Hull Thickness"})}),": Defines the thickness of the boundary hull region. The unit matches the model\u2019s length unit in Rhino/Grasshopper."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Target Width"})}),": Sets the wall thickness of the solid surface at the boundary location.",(0,t.jsx)(n.br,{}),"\n","Units match the model\u2019s length unit. When a Boundary is applied to only one side, the resulting solid surface thickness at that boundary will be: ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mtext,{children:"Target\xa0Width"}),(0,t.jsx)(n.mo,{children:"+"}),(0,t.jsx)(n.mtext,{children:"Thickness"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"}),(0,t.jsx)(n.mi,{mathvariant:"normal",children:"/"}),(0,t.jsx)(n.mn,{children:"2"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"(\\text{Target Width} + \\text{Thickness})/2"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord text",children:(0,t.jsx)(n.span,{className:"mord",children:"Target\xa0Width"})}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"+"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord text",children:(0,t.jsx)(n.span,{className:"mord",children:"Thickness"})}),(0,t.jsx)(n.span,{className:"mclose",children:")"}),(0,t.jsx)(n.span,{className:"mord",children:"/2"})]})]})]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Blend Distance"})}),": Controls the distance over which the Spherene structure blends smoothly into the boundary surface. Units match the model\u2019s length unit."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Blend Exponent"})}),": Adjusts the curvature profile of the blend transition.",(0,t.jsx)(n.br,{}),"\n","Common values:",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"0.125"})," = very tight,",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"0.25"})," = tight,",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"0.5"})," = normal ",(0,t.jsx)(n.em,{children:"(default)"}),",",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"1"})," = straight (45\xb0)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Hull Naked Edges"})}),": Boolean toggle that controls hull generation when the boundary is an open mesh with naked edges and ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Hull Thickness"})})," is not zero. ",(0,t.jsx)(n.strong,{children:"Default"})," = ",(0,t.jsx)(n.code,{children:"False"}),". When set to ",(0,t.jsx)(n.code,{children:"True"}),", a hull with sharp edges will be generated along the naked edges of the open mesh boundary. ",(0,t.jsx)(n.strong,{children:"Warning:"})," In rare cases, enabling this option for complex boundary meshes may create unintended cavities."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Hull Negative Normal"})}),": Boolean toggle that restricts blending to the negative normal direction of the selected boundary. ",(0,t.jsx)(n.strong,{children:"Default"})," = ",(0,t.jsx)(n.code,{children:"True"}),". This option is especially useful when the boundary is located inside the computed envelope, allowing controlled blending between the boundary and the generated Spherene geometry."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/doc_hull.png",alt:"Generated hull with various settings",width:480,align:"center"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["In rare cases, ",(0,t.jsx)(n.strong,{children:"Boolean errors"})," may occur when the boundary lies close to the envelope surface. Set ",(0,t.jsx)(n.code,{children:"Hull Negative Normal = False"})," to allow blending in both directions and produce a thicker hull; this often resolves the issue."]})}),"\n",(0,t.jsx)(n.p,{children:"In this example, the cone surface is divided into four sections, with three of them defined as separate boundaries, each using different parameter settings:"}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_boundary.jpg",alt:"Assign various boundary settings to three selected boundaries",width:640,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"The results below compare Spherene geometry without boundaries to those with different boundary configurations:"}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/xmpl_boundary.jpg",alt:"Comparison between generated Spherene geometry without boundary and with different boundaries",width:480,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"From the figure above, you can observe the following behavior:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Apply on back"})})," is ",(0,t.jsx)(n.strong,{children:"ON"}),", the volcano holes on the boundary are filled. When ",(0,t.jsx)(n.strong,{children:"OFF"}),", they remain open."]}),"\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Apply on front"})})," is ",(0,t.jsx)(n.strong,{children:"ON"}),", the area surrounding the volcano holes on the boundary is filled. When ",(0,t.jsx)(n.strong,{children:"OFF"}),", it remains open."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"detail-modifier",children:"Detail modifier"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Detail"})})," modifier ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/detail.png",alt:"detail Icon",width:32,align:"inline"})," allows you to define a closed body or mesh as a ",(0,t.jsx)(n.strong,{children:"Detail"}),", which can be ",(0,t.jsx)(n.strong,{children:"added to"})," or ",(0,t.jsx)(n.strong,{children:"subtracted from"})," the Spherene geometry. A Boolean input determines whether the detail is ",(0,t.jsx)(n.strong,{children:"added"})," (",(0,t.jsx)(n.code,{children:"False"}),") or ",(0,t.jsx)(n.strong,{children:"subtracted"})," (",(0,t.jsx)(n.code,{children:"True"}),")."]}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.strong,{children:"adding details"}),", the ",(0,t.jsx)(n.code,{children:"Detail"})," modifier behaves similarly to the ",(0,t.jsx)(n.code,{children:"Boundary"})," modifier ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/boundary.png",alt:"boundary Icon",width:32,align:"inline"}),":",(0,t.jsx)(n.br,{}),"\n","it grows the Spherene structure near the detail geometry into the detail body using a specified parameter set, including ",(0,t.jsx)(n.code,{children:"Target thickness"}),", ",(0,t.jsx)(n.code,{children:"Blend distance"}),", and ",(0,t.jsx)(n.code,{children:"Blend exponent"})," (details refer to [Boundary modifier](#boundary modifier))."]}),"\n",(0,t.jsxs)(n.p,{children:["In this example, we add a ",(0,t.jsx)(n.strong,{children:"cylindrical detail"})," (orange) to the bottom of the cone envelope and ",(0,t.jsx)(n.strong,{children:"subtract"})," ",(0,t.jsx)(n.strong,{children:"text bodies"})," (blue) from the cylinder, as shown below:"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_detail.jpg",alt:"Setup of details",width:320,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"The corresponding Grasshopper canvas for this setup is shown here:"}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_canvasdetail.jpg",alt:"Canvas of detail example",width:640,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["The figure below illustrates the ",(0,t.jsx)(n.strong,{children:"resulting Spherene geometry"})," after applying these ",(0,t.jsx)(n.code,{children:"Details"}),":"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/xmpl_detail.jpg",alt:"Generated Spherene with details",width:320,align:"center"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The text body should protrude slightly from the surface of the subtracting body (in this case, the bottom surface of the cylinder). If it does not, the computation may fail due to Boolean errors, as text bodies often contain complex mesh geometry."})}),"\n",(0,t.jsx)(n.h3,{id:"cavity-modifier",children:"Cavity modifier"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"sphe_Cavity"})})," modifier ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/cavity.png",alt:"cavity Icon",width:32,align:"inline"})," allows you to introduce a cavity into the Spherene geometry\u2014particularly useful for integrating inlets, outlets, or other functional features."]}),"\n",(0,t.jsxs)(n.p,{children:["In this example, a cylindrical cavity is placed on the front side of the cone envelope. The cavity geometry can be defined as either an ",(0,t.jsx)(n.strong,{children:"open surface"})," or a ",(0,t.jsx)(n.strong,{children:"closed body"}),":"]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_cavity.jpg",alt:"Setup of cavities",width:640,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["In the Grasshopper canvas, the desired cavity mesh is connected to the ",(0,t.jsx)(n.code,{children:"sphe_Cavity"})," modifier ",(0,t.jsx)(o.A,{src:"/img/grasshopper/icons/cavity.png",alt:"cavity Icon",width:32,align:"inline"}),". The ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Front/Back"})})," Boolean input determines which labyrinth the cavity surface will be applied to."]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/scr_canvascavity.jpg",alt:"Canvas of cavity example",width:480,align:"center"}),"\n",(0,t.jsxs)(n.p,{children:["The following figure compares three cases: a Spherene geometry with ",(0,t.jsx)(n.strong,{children:"Surface Cavity Back labyrinth"}),", ",(0,t.jsx)(n.strong,{children:"Body Cavity Back labyrinth"}),", and ",(0,t.jsx)(n.strong,{children:"Body Cavity Front labyrinth"}),"."]}),"\n",(0,t.jsx)(o.A,{src:"/img/grasshopper/xmpl_cavity.jpg",alt:"Comparison between a Spherene geometry with various cavity settings",width:640,align:"center"}),"\n",(0,t.jsx)(n.p,{children:"From the result, one can see:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["When an ",(0,t.jsx)(n.strong,{children:"open surface"})," is used as the cavity geometry, only the region adjacent to the selected surface becomes void."]}),"\n",(0,t.jsxs)(n.li,{children:["When a ",(0,t.jsx)(n.strong,{children:"closed body"})," is used as the cavity geometry, the ",(0,t.jsx)(n.strong,{children:"entire volume"})," occupied by that body is removed from the Spherene structure."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},3023:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(3696);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},6243:(e,n,s)=>{s.d(n,{A:()=>r});s(3696);var i=s(3254),t=s(2540);function r(e){let{src:n,alt:s="",width:r=200,align:o="center",zoom:l=!1}=e;const a=(0,i.Ay)(n),c={width:"number"==typeof r?`${r}px`:r,cursor:l?"zoom-in":"default",marginBottom:"1rem"};switch(o){case"left":c.display="block",c.margin="0 auto 1rem 0";break;case"center":c.display="block",c.margin="0 auto 1rem";break;case"right":c.display="block",c.margin="0 0 1rem auto";break;case"float-right":c.float="right",c.margin="0 0 1rem 1rem";break;case"inline":c.display="inline",c.verticalAlign="middle",c.margin="0 0.3em";break;case"row":c.flex=1,c.maxWidth="number"==typeof r?`${r}px`:r,c.objectFit="contain",c.margin="0 0.5rem 1rem"}return(0,t.jsx)("img",{src:a,alt:s,style:c})}},7251:(e,n,s)=>{s.d(n,{A:()=>t});s(3696),s(3254);var i=s(2540);function t(e){let{videoId:n,title:s="YouTube video"}=e;return(0,i.jsx)("iframe",{src:`https://www.youtube.com/embed/${n}?rel=0`,title:s,style:{width:"100%",aspectRatio:"16 / 9",border:"none"},allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerPolicy:"strict-origin-when-cross-origin",allowFullScreen:!0})}}}]);